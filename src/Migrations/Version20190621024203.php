<?php declare(strict_types=1);

namespace DoctrineMigrations;

use App\Util\Arrays;
use Doctrine\DBAL\Schema\Schema;
use Doctrine\Migrations\AbstractMigration;

final class Version20190621024203 extends AbstractMigration
{
    private $teamGamePlayerMap = [];

    public function preUp(Schema $schema): void
    {
        $result = $this->connection->fetchAll('SELECT game_id, id, team AS name FROM game_players ORDER BY game_id, name');
        $this->teamGamePlayerMap = Arrays::groupBy($result, 'game_id', 'name');
    }

    public function up(Schema $schema): void
    {
        $stmts = [];

        $stmts[] = "COMMENT ON COLUMN games.settings IS '(DC2Type:json_document)';";
        $stmts[] = "COMMENT ON COLUMN game_players.zone_hits IS '(DC2Type:json_array)';";
        $stmts[] = "COMMENT ON COLUMN sylius_settings.parameters IS '(DC2Type:json_array)';";

        $stmts[] = 'CREATE TABLE match_teams (
                    id INT GENERATED BY DEFAULT AS IDENTITY,
                    game_id INT DEFAULT NULL,
                    color VARCHAR(255) DEFAULT NULL,
                    name VARCHAR(255) NOT NULL,
                    PRIMARY KEY(id)
                  );';
        $stmts[] = 'CREATE INDEX idx_match_team_game_id ON match_teams (game_id);';
        $stmts[] = 'CREATE UNIQUE INDEX idx_match_team_name ON match_teams (game_id, name);';

        $stmts[] = 'ALTER TABLE match_teams ADD CONSTRAINT FK_match_teams_games FOREIGN KEY (game_id) REFERENCES games (id) NOT DEFERRABLE INITIALLY IMMEDIATE;';

        $stmts[] = 'ALTER TABLE game_players ADD match_team_id INT DEFAULT NULL;';

        $stmts[] = 'ALTER TABLE game_players DROP team;';

        $stmts[] = 'ALTER TABLE game_players ADD CONSTRAINT fk_game_players_match_teams
                    FOREIGN KEY (match_team_id) REFERENCES match_teams (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;';
        $stmts[] = 'CREATE INDEX idx_player_team_id ON game_players (match_team_id);';

        foreach ($stmts as $stmt) {
            $this->addSql($stmt);
        }
    }

    public function postUp(Schema $schema)
    {
        foreach ($this->teamGamePlayerMap as $gameId => $teams) {
            foreach ($teams as $name => $players) {
                $color = 'Team 1' === $name ? 'green' : 'orange';
                $this->connection->insert('match_teams', ['game_id' => $gameId, 'name' => $name, 'color' => $color]);
                $teamId = $this->connection->lastInsertId();
                foreach ($players as $player) {
                    $this->connection->update('game_players', ['match_team_id' => $teamId], ['id' => $player['id']]);
                }
            }
        }
    }

    public function down(Schema $schema): void
    {
        $this->throwIrreversibleMigrationException();
    }
}
