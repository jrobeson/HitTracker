nelmio_csp_reporter:
    path: /csp/report
    defaults:
        _controller: "nelmio_security.csp_reporter_controller:indexAction"
    methods:  [POST]

hittracker_vest_index:
    path: /vests
    methods: [GET]
    defaults:
        _controller: hittracker.controller.vest:indexAction
        _sylius:
            paginate: 20
            sortable: true
            sorting:
                id: asc
hittracker_vest_create:
    path: /vests/new
    methods: [GET, POST]
    defaults:
        _controller: hittracker.controller.vest:createAction
        _sylius:
            redirect: hittracker_vest_index

hittracker_vest_update:
    path: /vests/{id}/edit
    methods: [GET, PUT]
    defaults:
        _controller: hittracker.controller.vest:updateAction
        _sylius:
            redirect: hittracker_vest_index

hittracker_vest_delete:
    path: /vests/{id}
    methods: [DELETE]
    defaults:
        _controller: hittracker.controller.vest:deleteAction

hittracker_game_create:
    path: /games/new
    methods: [GET, POST]
    defaults:
        _controller: hittracker.controller.game:createAction
        _sylius:
            redirect:
                route: hittracker_game_active
                parameters: { arena: resource.arena }

hittracker_game_hit:
    path: /games/hit
    methods: [POST]
    defaults:
        _controller: hittracker.controller.game:hitAction

hittracker_game_active:
    path: /games/active/{arena}
    requirements:
        arena:  \d+
    methods: [GET]
    defaults:
        _controller: hittracker.controller.game:showBlankAction
        arena : 1
        _sylius:
            template: '@HitTrackerGame/Game/active.html.twig'
            repository:
                method: getActiveGame
                arguments: [$arena]

hittracker_game_scoreboard:
    path: /games/scoreboard/{arena}
    requirements:
        arena:  \d+
    methods: [GET]
    defaults:
        _controller: hittracker.controller.game:showBlankAction
        arena : 1
        _sylius:
            template: '@HitTrackerGame/Game/scoreboard.html.twig'
            repository:
                method: getMostRecentGame
                arguments: [$arena]

hittracker_game_scorecard:
    path: /games/scorecard/{id}
    requirements:
        id:  \d+
    methods: [GET]
    defaults:
        _controller: hittracker.controller.game:showAction
        _sylius:
            template: '@HitTrackerGame/Game/scorecard.html.twig'

hittracker_game_stop:
    path: /games/{id}/stop
    requirements:
        id:  \d+
    methods: [PATCH]
    defaults:
        _controller: hittracker.controller.game:stopAction

hittracker_game:
    resource: |
        alias: hittracker.game
        except: ['create']
    type: sylius.resource_api

hittracker_game_index:
    path: /games
    methods: [GET]
    defaults:
        _controller: hittracker.controller.game:indexAction
        _sylius:
            paginate: 20
            sorting:
                id: desc


hittracker_game_settings:
    path: /settings/games
    defaults:
        _controller: "sylius.controller.settings:updateAction"
        template: "Settings/update.html.twig"
        schema: game

hittracker_site_settings:
    path: /settings/site
    defaults:
        _controller: "sylius.controller.settings:updateAction"
        template: "Settings/update.html.twig"
        schema: site

page:
    path:  /pages/{name}
    defaults:
        _controller: "LazerBall\\HitTracker\\Controller\\StaticPageController::showAction"
home:
    path: /
    defaults:
        _controller: "LazerBall\\HitTracker\\Controller\\StaticPageController::showAction"
        name: help
